diff --git "b/doc/usr/es/esp-usr-flags-global-pendiente-hacer-revisi\303\263n.md" "a/doc/usr/es/esp-usr-flags-global-pendiente-hacer-revisi\303\263n.md"
index f4685ae..38fcfe7 100644
--- "b/doc/usr/es/esp-usr-flags-global-pendiente-hacer-revisi\303\263n.md"
+++ "a/doc/usr/es/esp-usr-flags-global-pendiente-hacer-revisi\303\263n.md"
@@ -53,7 +53,7 @@ Bajo esta opción se agrupan todas las variables configurables de Jool exceptuan
 
 ## Ejemplos
 
-* Para Desplegar la Configuración Actual (llaves & valores):
+*Para desplegar la configuración actual (llaves & valores):
 
 	$ jool_siit --global
 
@@ -61,16 +61,16 @@ Lo mismo, en versión mas corta:
 
 	$ jool_siit
 
-* Para Pausar Jool:
+*Para Pausar Jool:
 
 	# jool --global --disable
 
-* Para Encender "Address Dependent Filtering":
+*Para Encender "address dependent filtering":
 
 	$ # Valores válidos: {true, ***Apagado(0)***, 1, 0, yes, no, on, APAGADO (0)}
 	$ jool --address-dependent-filtering true
 
-* Para Actualizar la Lista Plateaus:
+*Para **Actualizar la lista plateaus**:
 
 	# jool_siit --mtu-plateaus "6000, 5000, 4000, 3000, 2000, 1000"
 
@@ -79,10 +79,9 @@ Lo mismo, en versión mas corta:
 ### `--enable`, `--disable`
 
 - Nombre: ***HABILITA & DESHABILITA JOOL***
-
 - Tipo: ***No Aplica***
-- Modos: ***SIIT & Stateful***
 - Valor por Omisión: Depends on modprobe arguments???
+- Modos: ***SIIT & Stateful***
 
 REANUDA Y PAUSA LA TRADUCCIÓN DE PAQUETES, RESPECTIVAMENTE. 
 
@@ -93,12 +92,12 @@ Mientras Jool está inactivo, *los timeouts no serán pausados** para que las en
 ### `--address-dependent-filtering`
 
 - Nombre: ***FILTRA DEPENDIENDO DEL DIRECCIONAMIENTO***
-
 - Tipo: ***Booleano***
-- Modos: ***Stateful***
 - Valor por Omisión: ***APAGADO (0)***
+- Modos: ***Stateful***
+- Nombre anterior: ***`--dropAddr`***
+
 
-- Nombre anterior: `--dropAddr`
 - Fuente: Disperso en el RFC 6146. Está un resumen al final de la [sección 1.2.3](http://tools.ietf.org/html/rfc6146#section-1.2.3).
 
 Larga historia corta:
@@ -130,6 +129,7 @@ Luego _n4b_ trata de conversar con _n6_ también:
 
 Ya que el registro BIB existe, _J_ sabe que _n4b_ significa  "2001:db8::1#10" cuando el dice "192.0.2.1#10", asi que el paquete puede ser técnicamente traducido. Sin embargo, debido a las tablas de sesión, _J_ tambien puede decir que _n6_ no ha estado conversando con _n4b_ en el pasado.
 
+
 Si `--address-dependent-filtering` está deshabilitado, _J_ permitirá al paquete de _n4b_ pasar. Si `--address-dependent-filtering` está encendido, _J_ desechará el paquete de _n4b_ y responderá con un error ICMP con el mensaje "Communication Administratively Prohibited". Esto demuele efectivamente cualquier intento de comunicación iniciado desde IPv4, aun si hay registros BIB (estáticos u otros).
 
 * Si estas utilizando el NAT64 para publicar un servicio que solo soporta IPv6 a la internet IPv4, tiene sentido que `--address-dependent-filtering` esté deshabilitado. Esto es por que se espera que los clientes se enteren del servicio IPv6 por su cuenta, y el servidor normalmente no inicia los flujos de paquetes. 
@@ -143,10 +143,9 @@ Si `--address-dependent-filtering` está deshabilitado, _J_ permitirá al paquet
 ### `--drop-icmpv6-info`
 
 - Tipo: ***Booleano***
-- Modos: ***Stateful***
 - Valor por Omisión: ***APAGADO (0)***
-
-- Nombre anterior: `--dropInfo`
+- Modos: ***Stateful***
+- Nombre anterior: ``--dropInfo``
 - Fuente: [RFC 6146, section 3.5.3](http://tools.ietf.org/html/rfc6146#section-3.5.3)
 
 Si activas esto, pings (ambas solicitudes y respuestas) serán bloqueados mientras esten siendo traducidos de ICMPv6 a ICMPv4.
@@ -159,9 +158,8 @@ Esta regla no afectara los mensajes de Error ICMP.
 ### `--drop-externally-initiated-tcp`
 
 - Tipo: ***Booleano***
-- Modos: ***Stateful***
 - Valor por Omisión: ***APAGADO (0)***
-
+- Modos: ***Stateful***
 - Nombre anterior: `--dropTCP`
 - Fuente: [RFC 6146, section 3.5.2.2](http://tools.ietf.org/html/rfc6146#section-3.5.2.2)
 
@@ -172,9 +170,8 @@ Por supuesto, esto **NO** bloqueará el tráfico IPv4 si algun nodo IPv6 lo soli
 ### `--udp-timeout`
 
 - Tipo: ***Entero (segundos)***
-- Modos: ***Stateful***
 - Valor por Omisión: ***300seg = 5 min***
-
+- Modos: ***Stateful***
 - Nombre anterior: `--toUDP`
 - Fuente: [RFC 6146, section 3.5.1](http://tools.ietf.org/html/rfc6146#section-3.5.1)
 
@@ -185,9 +182,8 @@ Cuando cambias este valor, los tiempos de vida de todas las sesiones UDP ya exis
 ### `--tcp-est-timeout`
 
 - Tipo: ***Entero (segundos)***
-- Modos: ***Stateful***
 - Valor por Omisión: ***7200seg = 2 hr***
-
+- Modos: ***Stateful***
 - Nombre anterior: `--toTCPest`
 - Fuente: [RFC 6146, section 3.5.2.2](http://tools.ietf.org/html/rfc6146#section-3.5.2.2)
 
@@ -199,9 +195,8 @@ Cuando cambias este valor, los tiempos de vida de sesiones TCP ya establecidas s
 ### `--tcp-trans-timeout`
 
 - Tipo: ***Entero (segundos)***
-- Modos: ***Stateful***
 - Valor por Omisión: ***2400seg = 4 min***
-
+- Modos: ***Stateful***
 - Nombre anterior: `--toTCPtrans`
 - Fuente: [RFC 6146, derivatives of section 3.5.2](http://tools.ietf.org/html/rfc6146#section-3.5.2)
 
@@ -212,9 +207,8 @@ Cuando cambias este valor, los tiempos de vida de sesiones TCP transitorias exis
 ### `--icmp-timeout`
 
 - Tipo: ***Entero (segundos)***
-- Modos: ***Stateful***
 - Valor por Omisión: ***60seg = 1 min***
-
+- Modos: ***Stateful***
 - Nombre anterior: `--toICMP`
 - Fuente: [RFC 6146, section 3.5.3](http://tools.ietf.org/html/rfc6146#section-3.5.3)
 
@@ -225,9 +219,8 @@ Cuando cambias este valor, los tiempos de vida de todas las sesiones ICMP son ac
 ### `--fragment-arrival-timeout`
 
 - Tipo: ***Entero (segundos)***
-- Modos: ***Stateful***
 - Valor por Omisión: ***2 seg***
-
+- Modos: ***Stateful***
 - Nombre anterior: `--toFrag`
 - Fuente: Ninguns (el parámetro denota un  [capricho de Linux](https://github.com/NICMx/NAT64/wiki/nf_defrag_ipv4-and-nf_defrag_ipv6#nf_defrag_ipv6---kernels-312-)).
 
@@ -251,9 +244,8 @@ Este comportamiento cambio desde Jool 3.2, donde `--toFrag` solía ser de hecho
 ### `--maximum-simultaneous-opens`
 
 - Tipo: ***Integer***
-- Modos: ***Stateful***
 - Valor por Omisión: ***10***
-
+- Modos: ***Stateful***
 - Nombre anterior: `--maxStoredPkts`
 - Fuente: [RFC 6146, section 5.3](http://tools.ietf.org/html/rfc6146#section-5.3) (indirectamente)
 
@@ -267,10 +259,9 @@ En el caso de TCP, la situación es un poco más complicada por que el nodo IPv4
 ### `--source-icmpv6-errors-better`
 
 - Tipo: ***Booleano***
-- Modos: ***Stateful***
 - Valor por Omisión: ***Apagado(0)***
+- Modos: ***Stateful***
 - Sentido de traducción: ***IPv4 -> IPv6 (sólo errores ICMP)***
-
 - Fuente: [Issue 132](https://github.com/NICMx/NAT64/issues/132)
 
 Por alguna razón, el RFC 6146 quiere que el origen de los errores ICMPv6 sea igual que la dirección de destino de sus paquetes internos. Esto luce muy extraño.
@@ -302,10 +293,9 @@ Digamos que el enlace entre R y n4 colapsa.
 ### `--logging-bib`
 
 - Tipo: ***Booleano***
-- Modos: ***Stateful***
 - Valor por Omisión: ***Apagado(0)***
+- Modos: ***Stateful***
 - Sentido de traducción: ***IPv4 -> IPv6 & IPv6 -> IPv4***
-
 - Fuente: [RFC 6888, section 4](http://tools.ietf.org/html/rfc6888#section-4)
 
 Habilita el registro de la creación y destrucción de mapeos de direcciones. Si eres un proveedor de servicios, tu gobierno quizá te solicite que hagas esto.
@@ -346,10 +336,9 @@ Si loggear el destino tiene sentido para ti, ve `--logging-session` (abajo). Par
 ### `--logging-session`
 
 - Tipo: ***Booleano***
-- Modos: ***Stateful***
 - Valor por Omisión: ***Apagado(0)***
+- Modos: ***Stateful***
 - Sentido de traducción: ***IPv4 -> IPv6 & IPv6 -> IPv4***
-
 - Fuente: [RFC 6888, sección 4](http://tools.ietf.org/html/rfc6888#section-4)
 
 Habilita el registro de todas las sesiones mientras son creadas y destruidas.
@@ -377,10 +366,9 @@ Este registro es remarcablemente mas voluptuoso que [`--logging-bib`](#logging-b
 ### `--zeroize-traffic-class`
 
 - Tipo: ***Booleano***
-- Modos: ***SIIT & Stateful***
 - Valor por Omisión: ***APAGADO (0)***
+- Modos: ***SIIT & Stateful***
 - Sentido de traducción: ***IPv4 -> IPv6***
-
 - Nombre anterior: `--setTC`
 - Fuente: [RFC 6145, sección 4.1](http://tools.ietf.org/html/rfc6145#section-4.1)
 
@@ -393,10 +381,9 @@ Si dejas esto desactivado, el valor del campo Tipo de Servicio será copiado dir
 ### `--override-tos`
 
 - Tipo: ***Booleano***
-- Modos: ***SIIT & Stateful***
 - Valor por Omisión: ***APAGADO (0)***
+- Modos: ***SIIT & Stateful***
 - Sentido de traducción: ***IPv6-> IPv4***
-
 - Fuente: [RFC 6145, section 5.1](http://tools.ietf.org/html/rfc6145#section-5.1)
 - Nombre anterior: `--setTOS`
 
@@ -410,10 +397,9 @@ Si dejas esto desactivado, el valor del campo Clase de Tráfico será copiado di
 ### `--tos`
 
 - Tipo: ***Integer***
-- Modos: ***SIIT & Stateful***
 - Valor por Omisión: ***Apagado(0)***
+- Modos: ***SIIT & Stateful***
 - Sentido de traducción: ***IPv6-> IPv4***
-
 - Nombre anterior: `--TOS`
 
 - Fuente: [RFC 6145, section 5.1](http://tools.ietf.org/html/rfc6145#section-5.1)
@@ -444,10 +430,9 @@ En desuso. Ve [Atomic Fragments](esp-usr-flags-atomic.html).
 ### `--amend-udp-checksum-zero`
 
 - Tipo: ***Booleano***
-- Modos: ***SIIT***
 - Valor por Omisión: ***APAGADO (0)***
+- Modos: ***SIIT***
 - Sentido de traducción: ***IPv4-> IPv6 (Solo UDP)***
-
 - Fuente: [RFC 6145, sección 4.5](http://tools.ietf.org/html/rfc6145#section-4.5)
 
 En IPv4, es legal para los paquetes UDP contener zero como checksum. Esto es por que la cuestion completa sobre UDP es que es poco confiable, y por lo tanto algunas veces el valor de validacion del checksum no justifica su costo.
@@ -466,10 +451,9 @@ El Stateful NAT64 de Jool _siempre_ procesa los checksums con valor cero de los
 ### `--randomize-rfc6791-addresses`
 
 - Tipo: ***Booleano***
-- Modos: ***SIIT***
 - Valor por Omisión: ***Encendido(1)***
+- Modos: ***SIIT***
 - Sentido de traducción: ***IPv6-> IPv4***
-
 - Fuente: [Issue 130](https://github.com/NICMx/NAT64/issues/130)
 
 Si el origen de un error ICMPv6 no puede ser traducido, el [RFC 6791](https://tools.ietf.org/html/rfc6791) quiere que asignemos una dirección IPv4 del [pool RFC 6791](usr-flags-pool6791.html)
@@ -482,12 +466,12 @@ Porque? se podria decir que [`hop limit`th es mejor](https://github.com/NICMx/NA
 
 ### `--mtu-plateaus`
 
-- Tipo: ***Lista de Enteros separated by commas (If you want whitespace, remember to quote)***
-- Modos: ***SIIT & Stateful***
+- Tipo: ***List of Integers separated by commas (If you want whitespace, remember to quote)***
 - Valor por Omisión: ***65535, 32000, 17914, 8166, 4352, 2002, 1492, 1006, 508, 296, 68***
+- Modos: ***SIIT & Stateful***
 - Sentido de traducción: ***IPv4-> IPv6 (Solo Errores de ICMP)***
-
 - Nombre anterior: `--plateaus`
+
 - Fuente: [RFC 6145, sección 4.2](http://tools.ietf.org/html/rfc6145#section-4.2)
 
 Cuando un paquete no debe de ser fragmentado y no encaja en un enlace por el que se supone debe pasar, el router del problema se supone debe de responder con un mensaje de error indicando _Fragmentation Needed_. Idealmente, este mensaje de error contendría el MTY del link para que el emisor original estuviera consciente del tamaño ideal del paquete y evite la fragmentación. Sin embargo, la especificación ICMPv4 no requiere que los routers incluyan esta información.
